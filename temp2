#include "binary_trees.h"
/**
 * bst_insert - inserts a value in a binary search tree
 * @tree: double pointer to the root nodeof the bstto insert the value
 * @value: value to store in the node to be inserted
 * Return: pointer to the created node
 */
bst_t *bst_insert(bst_t **tree, int value)
{
	bst_t *root = (*tree);

	if (!tree)
		return (NULL);
	if (!root)
	{
		root = binary_tree_node(NULL, value);
		return (root);
	}
	if (value == root->n)
		return (root);
	if (value < root->n)
	{
		if (!root->left)
		{
			root->left = binary_tree_node(root, value);
			return (root->left);
		}
		return (bst_insert(&root->left, value));
	}
	if (value > root->n)
	{
		if (!root->right)
		{
			root->right = binary_tree_node(root, value);
			return (root->right);
		}
		return (bst_insert(&root->right, value));
	}
	return (NULL);
}
